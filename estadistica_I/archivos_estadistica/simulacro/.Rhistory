knitr::opts_chunk$set(echo = TRUE)
casos_totales:
libros = 1:20
casos_totales:
libros = 1:20
libros = 1:20
casos_fav()
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
}
casos_fav = function(){
mi_libro= sample(8:20)
}
casos_fav()
casos_fav()
mi_libro= sample(8:20)
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros) #posicion de mi libro
}
casos_fav = function(){
libro = 1:20
sample(8:20) #condicion
}
casos_totales()
casos_totales()
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libro = 1:20
sample(8:20) #condicion
}
casos_totales()
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
casos_totales()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
N=10
replicate(N, casos_fav())
sum (replicate(N, casos_fav()))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10
sum (replicate(N, casos_fav()))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10
sum (replicate(N, casos_fav()))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10
sum (replicate(N, casos_fav()))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10
sum (replicate(N, casos_fav()))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10
sum (replicate(N, casos_fav()))/N
#-----------------CASO GENERAL -----------
casos_totales = function(n){
libros = 1:n
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(n,k){
libros = 1:n
mi_libro = sample(libros, 1)
mi_libro > k #cond de exito
}
N=10
n=20
k=7
sum (replicate(N, casos_fav(n,k)))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10
sum (replicate(N, casos_fav()))/N
#-----------------CASO GENERAL -----------
casos_totales = function(n){
libros = 1:n
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(n,k){
libros = 1:n
mi_libro = sample(libros, 1)
mi_libro > k #cond de exito
}
N=10
n=20
k=7
sum (replicate(N, casos_fav(n,k)))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10000
sum (replicate(N, casos_fav()))/N
#-----------------CASO GENERAL -----------
casos_totales = function(n){
libros = 1:n
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(n,k){
libros = 1:n
mi_libro = sample(libros, 1)
mi_libro > k #cond de exito
}
N=10
n=20
k=7
sum (replicate(N, casos_fav(n,k)))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10000
sum (replicate(N, casos_fav()))/N
#-----------------CASO GENERAL -----------
casos_totales = function(n){
libros = 1:n
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(n,k){
libros = 1:n
mi_libro = sample(libros, 1)
mi_libro > k #cond de exito
}
n=20
k=7
sum (replicate(N, casos_fav(n,k)))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10000
sum (replicate(N, casos_fav()))/N
#-----------------CASO GENERAL -----------
casos_totales = function(n){
libros = 1:n
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(n,k){
libros = 1:n
mi_libro = sample(libros, 1)
mi_libro > k #cond de exito
}
n=20
k=7
sum (replicate(N, casos_fav(n,k)))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10000
sum (replicate(N, casos_fav()))/N
#-----------------CASO GENERAL -----------
casos_totales = function(n){
libros = 1:n
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(n,k){
libros = 1:n
mi_libro = sample(libros, 1)
mi_libro > k #cond de exito
}
n=20
k=7
sum (replicate(N, casos_fav(n,k)))/N
#x : "numero de libros antes del correcto"
#CASO CONCRETO
#Libros: 20
#Compruebo más de 7 libros (k=7)
casos_totales = function(){
libros = 1:20
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(){
libros = 1:20
mi_libro = sample(libros, 1)
mi_libro > 7 #cond de exito
}
N=10000
sum (replicate(N, casos_fav()))/N
#-----------------CASO GENERAL -----------
casos_totales = function(n){
libros = 1:n
sample(libros, 1) #posicion de mi libro
}
casos_fav = function(n,k){
libros = 1:n
mi_libro = sample(libros, 1)
mi_libro > k #cond de exito
}
n=20
k=7
sum (replicate(N, casos_fav(n,k)))/N
butacas = c(rep(4,1), rep(9,0))
c(rep(4,1), rep(9,0))
rep(4,1)
rep(1,4)
butacas = c(rep(1,4), rep(0,9))
butacas
#a) P("quinta persona sea un chico")
casos_totales = function(){
personas = c(rep(1,4), rep(0,9))
sample(personas)
}
casos_totales()
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
butacas
butacas[1:4] == 0
sum(butacas[1:4]) == 0
butacas = 0 0 0 0 1 1 1 1 0 0 0 0 0
casos_fav()
#a) P("quinta persona sea un chico")
casos_totales = function(){
personas = c(rep(1,4), rep(0,9))
sample(personas)
}
casos_fav = function(){
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
sum(butacas[1:5]) == 1
}
casos_fav()
butacas[1:5]
sum(butacas[1:5])
sum(butacas[1:5]) == 1
#a) P("quinta persona sea un chico")
casos_totales = function(){
personas = c(rep(1,4), rep(0,9))
sample(personas)
}
casos_fav = function(){
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
sum(butacas[1:5]) == 1
}
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
casos_fav()
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
sum(butacas[1:5]) == 1
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
sum(butacas[1:5]) == 1
N=100
replicate(N, casos_fav())
#a) P("quinta persona sea un chico")
casos_totales = function(){
personas = c(rep(1,4), rep(0,9))
sample(personas)
}
casos_fav = function(){
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
sum(butacas[1:5]) == 1
}
N=100
sum (replicate(N, casos_fav())) /N
#a) P("quinta persona sea un chico")
casos_totales = function(){
personas = c(rep(1,4), rep(0,9))
sample(personas)
}
casos_fav = function(){
personas = c(rep(1,4), rep(0,9))
butacas = sample(personas)
sum(butacas[1:5]) == 1
}
N=10000
sum (replicate(N, casos_fav())) /N
