print("0.96=P(-t<(x_gorrito - mu)/(sd/sqrt(n) < t)")
#0.02 - 0.96 - 0.02
t = qt(0.02, df= n-1)
menos_t = qt(0.962, df= 24 )
mu1 = x_gorrito -t * sd /sqrt(n)
mu2 = x_gorrito + menos_t * sd/sqrt(n)
c(mu2,mu1)
library(readr)
homeo_weight_loss <- read_csv("data_2/data_2/homeo_weight_loss.csv")
View(homeo_weight_loss)
knitr::opts_chunk$set(echo = TRUE)
homeo_weight_loss <- read_csv("data_2/data_2/homeo_weight_loss.csv")
library(readr)
homeo_weight_loss <- read_csv("data_2/data_2/homeo_weight_loss.csv")
#1º) Formular hipótesis:
#H0: mu = 2
#Ha: mu != 0
#2º) Estadístico de contraste
homeo_weight_loss
#2º) Estadístico de contraste
bins1 = nclass.FD(homeo_weight_loss$weight_loss_Kg)
library("performance")
library(readr)
library("performance")
homeo_weight_loss <- read_csv("data_2/data_2/homeo_weight_loss.csv")
#1º) Formular hipótesis:
#H0: mu = 2
#Ha: mu != 0
#2º) Estadístico de contraste
bins1 = nclass.FD(homeo_weight_loss$weight_loss_Kg)
ggplot(homeo_weight_loss, aes(x=weight_loss_Kg)) + geom_histogram(bins = bins1)
library("ggplot")
library("ggplot2")
library(readr)
library("performance")
library("ggplot2")
homeo_weight_loss <- read_csv("data_2/data_2/homeo_weight_loss.csv")
#1º) Formular hipótesis:
#H0: mu = 2
#Ha: mu != 0
#2º) Estadístico de contraste
bins1 = nclass.FD(homeo_weight_loss$weight_loss_Kg)
ggplot(homeo_weight_loss, aes(x=weight_loss_Kg)) + geom_histogram(bins = bins1)
?t.test
#Dsitribución normal + poblc infinita
#Media muestral con var descnocida --> T de Student
my_test = t.test(homeo_weight_loss$weight_loss_Kg, mu = 2)
my_test$p.value
my_test
print("Debido a q el pvalor es muy bajo, podemos" +
"apoyar la hipotesis alternativa de que no se perdenrán"+
"2 kg con este producto")
library(readr)
library("performance")
library("ggplot2")
homeo_weight_loss <- read_csv("data_2/data_2/homeo_weight_loss.csv")
#1º) Formular hipótesis:
#H0: mu = 2
#Ha: mu != 0
#2º) Estadístico de contraste
bins1 = nclass.FD(homeo_weight_loss$weight_loss_Kg)
ggplot(homeo_weight_loss, aes(x=weight_loss_Kg)) + geom_histogram
ggplot(homeo_weight_loss, aes(x=weight_loss_Kg)) + geom_histogram()
#Dsitribución normal + poblc infinita
#Media muestral con var descnocida --> T de Student
my_test = t.test(homeo_weight_loss$weight_loss_Kg, mu = 2)
my_test
print("Debido a q el pvalor es muy bajo, podemos",
"apoyar la hipotesis alternativa de que no se perdenrán",
"2 kg con este producto")
mean_h = mean (homeo_weight_loss$weight_loss_Kg)
View(homeo_weight_loss)
set.seed(42)
x <- rnorm(30, mean = 0, sd = 5)
print(c(
t.test(x, mu = 1)$p.value,
t.test(x, mu = -1)$p.value
))
N <- 5000
alpha <- 0.05
sims <- replicate(N, {
# H0: mu = 0
x <- rnorm(100, mean = 0)            # Genera muestras de H0 (H0 es correcta)
test <- t.test(x, mu = 0)$p.value    # Testea H0
# Añade condición de éxito para calcular la probabilidad de
# "Rechazar H_0 a pesar de ser correcta"
# ?????????????????????????????????????????????
})
print(paste("alpha =", alpha, "| p(incorrectly reject H0) = ", mean(sims)))
N <- 5000
alpha <- 0.05
sims <- replicate(N, {
# H0: mu = 0
x <- rnorm(100, mean = 0)            # Genera muestras de H0 (H0 es correcta)
pvalor <- t.test(x, mu = 0)$p.value    # Testea H0
# Añade condición de éxito para calcular la probabilidad de
# "Rechazar H_0 a pesar de ser correcta"
pvalor<alpha
# ?????????????????????????????????????????????
})
print(paste("alpha =", alpha, "| p(incorrectly reject H0) = ", mean(sims)))
?t.test
#Ha: mu < 2 --> alternative less
t.test(homeo_weight_loss$weight_loss_Kg, alternative = "less", mu = 2)
t.test(homeo_weight_loss$weight_loss_Kg, alternative = "less", mu = 2, conf.level = 99)
library(readr)
pharma_weight_loss <- read_csv("data_2/data_2/pharma_weight_loss.csv")
View(pharma_weight_loss)
#2º) buscar el estadístico --> T de Student
#Asunciones (asumimos q son ciertas q pereza de vida)
t.test(pharma_weight_loss$weight_loss_Kg, alternative = "less", conf.level = 0.95)
#Ha imp!!!
t.test(pharma_weight_loss$weight_loss_Kg, alternative = "greater", conf.level = 0.95)
#Ha imp!!!
my_test = t.test(pharma_weight_loss$weight_loss_Kg, alternative = "greater", conf.level = 0.95)
my_test
effectsize(my_test)
library("effectsize")
effectsize(my_test)
library(readr)
iq_spanish <- read_csv("data_2/data_2/iq_spanish.csv")
View(iq_spanish)
#2º) Estadístico ==> Varianza Muestral
sigma = sd(homeo_weight_loss$weight_loss_Kg)
sigma2 = var(homeo_weight_loss$weight_loss_Kg)
nrow(homeo_weight_loss$weight_loss_Kg)
nrow(homeo_weight_loss$weight_loss_Kg)
knitr::opts_chunk$set(echo = TRUE)
n = nrow(iq_spanish)
nrow(iq$iq)
nrow(iq$iq)
var_muestral = var(iq$iq)
#Como de raro es obtener ese chi_cuad
pvalor = 2*(1-pchisq(chi_cuad, df = 29))
chi_cuad = (30-1)*var_muestral / (15^2)
#Como de raro es obtener ese chi_cuad
pvalor = 2*(1-pchisq(chi_cuad, df = 29))
#Tenemos q cuantificar como de raro es:
pvalor = 2*(1-pchisq(valor_estadistico_datos, df = n-1))
library(readr)
iq_spanish <- read_csv("data_2/data_2/iq_spanish.csv")
# 1) Hipótesis
#H0: var = 15^2
#Ha: var != 15^2
#2) Estadistico de contraste
sigma =  sd(iq_spanish$iq)
var_muestral = var(iq_spanish$iq)
library(ggplot2)
ggplot(iq_spanish, aes(x=iq)) + geom_histogram(bins = nclass.FD(iq))
2*(1-pchisq(valor_estadistico_datos, df = n-1))
# 3)
valor_estadistico_datos = 29 * var_muestral/(15^2)
#Tenemos q cuantificar como de raro es:
pvalor = 2*(1-pchisq(valor_estadistico_datos, df = n-1))
2*(1-pchisq(valor_estadistico_datos, df = n-1))
2*(1-pchisq(valor_estadistico_datos, df = n-1))
#Como de raro es obtener ese chi_cuad
# P(X > chi_cuad) 0 P(X<chi_cuad)^--> 2 * (1 - P(X< Chi cuad))
pvalor = 2 * (1 - pchisq(chi_cuad, df = 29))
2 * (1 - pchisq(chi_cuad, df = 29))
library(readr)
iq_spanish <- read_csv("data_2/data_2/iq_spanish.csv")
View(iq_spanish)
#1º) Formular hipótesis:
#H0: sigma = 15 --------------------> H0: sigma^2  = 15^2
#Ha: sigma != 15--------------------> Ha: sigma^2 != 15^2
#Buscar estadistico --> nos conviene cambiar a sigma^2
#2º) Estadístico ==> Varianza Muestral
sigma = sd(iq$iq)
var_muestral = var(iq$iq)
nrow(iq$iq)
chi_cuad = (30-1)*var_muestral / (15^2)
#Como de raro es obtener ese chi_cuad
# P(X > chi_cuad) 0 P(X<chi_cuad)^--> 2 * (1 - P(X< Chi cuad))
pvalor = 2 * (1 - pchisq(chi_cuad, df = 29))
library(readr)
iq_spanish <- read_csv("data_2/data_2/iq_spanish.csv")
View(iq_spanish)
#1º) Formular hipótesis:
#H0: sigma = 15 --------------------> H0: sigma^2  = 15^2
#Ha: sigma != 15--------------------> Ha: sigma^2 != 15^2
#Buscar estadistico --> nos conviene cambiar a sigma^2
#2º) Estadístico ==> Varianza Muestral
sigma = sd(iq$iq)
var_muestral = var(iq$iq)
nrow(iq$iq)
chi_cuad = (30-1)*var_muestral / (15^2)
#Como de raro es obtener ese chi_cuad
# P(X > chi_cuad) 0 P(X<chi_cuad)^--> 2 * (1 - P(X< Chi cuad))
pvalor = 2 * (1 - pchisq(chi_cuad, df = 29))
pvalor<0.05
library(readr)
iq_spanish <- read_csv("data_2/data_2/iq_spanish.csv")
View(iq_spanish)
#1º) Formular hipótesis:
#H0: sigma = 15 --------------------> H0: sigma^2  = 15^2
#Ha: sigma != 15--------------------> Ha: sigma^2 != 15^2
#Buscar estadistico --> nos conviene cambiar a sigma^2
#2º) Estadístico ==> Varianza Muestral
sigma = sd(iq$iq)
var_muestral = var(iq$iq)
nrow(iq$iq)
chi_cuad = (30-1)*var_muestral / (15^2)
#Como de raro es obtener ese chi_cuad
# P(X > chi_cuad) 0 P(X<chi_cuad)^--> 2 * (1 - P(X< Chi cuad))
pvalor = 2 * (1 - qchisq(chi_cuad, df = 29))
pvalor<0.05
2 * (1 - qchisq(chi_cuad, df = 29))
(1 - pchisq(chi_cuad, df = 29))
2 * (1 - pchisq(chi_cuad, df = 29))
#Como de raro es obtener ese chi_cuad
# P(X > chi_cuad) 0 P(X<chi_cuad)^--> 2 * (1 - P(X< Chi cuad))
pvalor = 2 * (pchisq(chi_cuad, df = 29))
pvalor<0.05
2 * (pchisq(chi_cuad, df = 29))
2*(1-pchisq(valor_estadistico_datos, df = n-1))
nrow(iq_spanish)
chi_cuad = ((30-1)*var_muestral)/ (15^2)
#Como de raro es obtener ese chi_cuad
# P(X > chi_cuad) 0 P(X<chi_cuad)^--> 2 * (1 - P(X< Chi cuad))
pvalor = 2 * (1 - pchisq(chi_cuad, df = 29))
power.t.test( delta = 0.5, #incremento de medio kilo --> mu_antes - mu_despues = 0.5
sd = 4.1,
sig.level = 0.01,
power = 0.9,
type="one.sample",
alternative = "one.sided"
)
library(readr)
howell1 <- read_delim("data_3/data_3/howell1.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(howell1)
knitr::opts_chunk$set(echo = TRUE)
#2º) Estadísitico:
#Media muestral con varianza desconocida --> T de Student
library("ggplot2")
ggplot(howell1, aes(x = height)) + geom_histogram(bins = nclass.FD(heights))
nclass.FD(height)
nclass.FD(howell1$height)
ggplot(howell1, aes(x = height)) + geom_histogram(bins = nclass.FD(howell1$height))
#3º) Visualizar
ggplot(howell1, aes(x=height, col = sex)) + geom_jitter()
#3º) Visualizar
howell1$male = as.factor(howell1$male)
ggplot(howell1, aes(x=height, col = male)) + geom_jitter()
ggplot(howell1, aes(x=height, col = male)) + geom_density()
#3º) Visualizar
#filtar los datos --> adultos
howell1_adult = howell1[howell1$age > 18,]
#3º) Visualizar
#filtar los datos --> adultos
h_adult = howell1[howell1$age > 18,]
View(h_adult)
hist(h_adult$height)
ggplot(h_adult, aes(x=height, col = male)) + geom_density()
ggplot(h_adult, aes(x=height, col = male)) + geom_density()
library("ggplot2")
#filtar los datos --> adultos
h_adult = howell1[howell1$age > 18,]
ggplot(h_adult, aes(x = height)) + geom_histogram(bins = nclass.FD(howell1$height))
#3º) Visualizar
#filtar los datos --> adultos
howell1$male = as.factor(howell1$male)
ggplot(h_adult, aes(x=height, col = male)) + geom_density()
?t.test
#4º) Realizar los test
my_test = t.test(height~male, conf.level=0.99)º
#4º) Realizar los test
my_test = t.test(height~male, conf.level=0.99)
#4º) Realizar los test
my_test = t.test(height~male, h_adult,  conf.level=0.99)
t.test(height~male, h_adult,  conf.level=0.99)
#puesto que el pvalor es pequeó, apoyamos la hipotesis alternativa
summary(my_test)
effectsize(my_test)
#5º) Tamaño del efect
library("effectsize")
#5º) Tamaño del efect
library("effectsize")
effectsize(my_test)
h_adult[h_adult$male == 1, ]
h_adult[h_adult$male == 0, ]
#4º) Realizar los test
#Ha: mu_mujer != mu_hombre --> mu_mujer-mu_hombre != 0
# xxxxxx my_test = t.test(height~male, h_adult,  conf.level=0.99)
men = h_adult[h_adult$male == 1, ]
womern = h_adult[h_adult$male == 0, ]
t.test(men, women, alternative = "two.sided", conf.level = 0.99)
t.test(men$height, women$height, alternative = "two.sided", conf.level = 0.99)
t.test(men$height, women$height, alternative = "two.sided")
# xxxxxx my_test = t.test(height~male, h_adult,  conf.level=0.99)
t.test(men$height, women$height, alternative = "two.sided", mu = 0)
library(readr)
howell1 <- read_delim("data_3/data_3/howell1.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
#View(howell1)
#¿depende la altura del sexo?
#1º) Formular hipótesis
#H0: mu_mujer = mu_hombre
#Ha: mu_mujer != mu_hombre
#2º) Estadísitico:
#Media muestral con varianza desconocida --> T de Student
library("ggplot2")
#filtar los datos --> adultos
h_adult = howell1[howell1$age >= 18,]
ggplot(h_adult, aes(x = height)) + geom_histogram(bins = nclass.FD(howell1$height))
# Es normal
#indep de muestras para x e y --> población infinita
#indep entre X e Y --> la altura de la mujer no depende de la del hombre
#3º) Visualizar
#filtar los datos --> adultos
howell1$male = as.factor(howell1$male)
ggplot(h_adult, aes(x=height, col = male)) + geom_density()
#4º) Realizar los test
#Ha: mu_mujer != mu_hombre --> mu_mujer-mu_hombre != 0 <<< DOS COLAS
men = h_adult[h_adult$male == 1, ]
women = h_adult[h_adult$male == 0, ]
# xxxxxx my_test = t.test(height~male, h_adult,  conf.level=0.99)
t.test(men$height, women$height, alternative = "two.sided", mu = 0)
#puesto que el pvalor es pequeó, apoyamos la hipotesis alternativa
#5º) Tamaño del efect
library("effectsize")
effectsize(my_test)
h_adult$male = as.factor(h_adult$male)
men = h_adult[h_adult$male == 1, ]
women = h_adult[h_adult$male == 0, ]
# xxxxxx my_test = t.test(height~male, h_adult,  conf.level=0.99)
t.test(men$height, women$height, alternative = "two.sided", mu = 0)
#5º) Tamaño del efect
library("effectsize")
effectsize(my_test)
# xxxxxx my_test = t.test(height~male, h_adult,  conf.level=0.99)
my_test =t.test(men$height, women$height, alternative = "two.sided", mu = 0)
my_test
print("puesto que el pvalor es pequeño, apoyamos la hipotesis alternativa")
print("hombres tienen una altura de entorno a 9.67-12.02 cm más q las mujeres")
#5º) Tamaño del efect
library("effectsize")
effectsize(my_test)
print("un-pooled sd : desv típica no agrupada")
print("solos si sd_y = sd_x --> uso de n_x y el n_y")
t.test(men$height, women$height, alternative="two.sided", var.equal = TRUE)
effectsize(test2)
test2 = t.test(men$height, women$height, alternative="two.sided", var.equal = TRUE)
test2
effectsize(test2)
library(readr)
gbef_long <- read_table("data_3/data_3/gbef_long.csv")
View(gbef_long)
library(readr)
gbef_long <- read_table("data_3/data_3/gbef_long.csv")
View(gbef_long)
gbef_long <- read_table("data_3/data_3/gbef_long.csv")
View(gbef_long)
#2º) VISUALIZAR
preop = gbef_long[gbef_long$`"class"`==`"Preop"` ]
library(readr)
gbef_long <- read_table("data_3/data_3/gbef_long.csv")
#View(gbef_long)
#1º) FORMULAR LAS HIPÓTESIS
#H0: mu_postop < preop --> mu_postop - mu_preop<>0
#Ha: mu_postop > preop --> mu_postop - mu_preop >0
#2º) VISUALIZAR
preop = gbef_long[gbef_long$`"class"`==`"Preop"` ]
gbef_long
#2º) VISUALIZAR
preop = gbef_long[gbef_long$`"class"`=="\"Preop\"" , ]
postop = gbef_long[gbef_long$`"class"`== "\"Postop\"" , ]
preop
postop
diff_postpre = preop - postop
preop - postop
diff_postpre = gbef_long[gbef_long$`"gbef"` == preop - postop, ]
gbef_long[gbef_long$`"gbef"` == preop - postop, ]
diff_postpre = postop$`"gbef"` - preop$`"gbef"`
hist(diff_postpre)
ggplot(gbef_long, aes(x=`"gbef"`))
# *indep entre x e y -->
# indep de muestras -->
nrow(gbef_long$`"ID"`)
?t.test
t.test(postop, preop, paired = TRUE)
t.test(postop$`"gbef"`, preop$`"gbef"`, paired = TRUE, mu = 0)
t.test(postop$`"gbef"`, preop$`"gbef"`, paired = TRUE, alternative = "greater" ,mu = 0)
t.test(diff_postpre, alternative = "greater", mu = 0)
test_gbef =  t.test(postop$`"gbef"`, preop$`"gbef"`, paired = TRUE, alternative = "greater" ,mu = 0)
effects(test_gbef)
effectsize(test_gbef)
?power.var.test
?power-t.test
?power.t.test
#5º) ¿Cuantas muestras?
power.t.test( delta =  18.075, #media del t.test
sd = sd(diff_postpre),
sig.level = 0.01,
power=0.9,
alternative = "one.sided")
?var.test
#1º) simular los datos --> suponemos Distribucion normal
metodoA = rnorm(16, sd=sqrt(24))
metodoB = rnorm(18, sd= sqrt(18))
c(metodoA, "xxxxxxxxxx", metodoB)
#ESTIMACIÓN
simsA_z = (metodoA - mean(metodoA))/sd(metodoA)*sqrt(24)
#ESTIMACIÓN
simsA_z = (metodoA - mean(metodoA))/(sd(metodoA)*sqrt(24))
simnsB_z = (metodoB - mean(metodoB))/(sd(metodoB) * sqrt(18))
simsB_z = (metodoB - mean(metodoB))/(sd(metodoB) * sqrt(18))
var.test(simsA_z, simsB_z, conf.level = 0.98)
?qf
b = qf(0.99, 16-1, 10-1 )
#buscar un cuantil: 0.01-0.98 - 0.01
#df => muestras - 1 grado de libertad
cuantiles = c(
a = qf(0.01, 16-1, 10-1 ),
b = qf(0.99, 16-1, 10-1 )
)
intervalo_confianza = ratio/cuantiles
#POR F DE SNECOR
ratio = 24/18
ratio/cuantiles
var.test(simsA_z, simsB_z, conf.level = 0.98)
library(readr)
spain_league <- read_csv("data_4/data_4/spain_league.csv")
View(spain_league)
?qpois
knitr::opts_chunk$set(echo = TRUE)
(0.01, lambda1 )
#0.01 - 0.98 - 0.01
a = qpois(0.01, lambda1 )
(0.01, lambda1 )
#X: num de goles --> Pois(lamda)
lambda1 = mean(spain_league$hgoal)
#0.01 - 0.98 - 0.01
a = qpois(0.01, lambda1 )
qpois(0.01, lambda1 )
#0.01 - 0.98 - 0.01
# z = X_gorrito - lambda / sqrt(lambda/n)--------->  X_gorrito - lambda / sqrt(X_gorrito/n)
a = qnorm(0.01, lambda1 )
qnorm(0.01, lambda1 )
#0.01 - 0.98 - 0.01
# z = X_gorrito - lambda / sqrt(lambda/n)--------->  X_gorrito - lambda / sqrt(X_gorrito/n)
menos_z = qnorm(0.01, lambda1 )
mas_z = qnorm(0.99)
#0.01 - 0.98 - 0.01
# z = X_gorrito - lambda / sqrt(lambda/n)--------->  X_gorrito - lambda / sqrt(X_gorrito/n)
menos_z = qnorm(0.01)
mas_z = qnorm(0.99)
#X_gorrito - 2.3* sqrt(X_gorrito/n) < lambda
z = c(mas_z, menos_z)
lambda_est + z * sqrt(lambda_est/length(spain_league$hgoal))
#X: num de goles --> Pois(lamda)
lambda_est = mean(spain_league$hgoal)
#X_gorrito - 2.3* sqrt(X_gorrito/n) < lambda
z = c(mas_z, menos_z)
lambda_est + z * sqrt(lambda_est/length(spain_league$hgoal))
#X: num de goles --> Pois(lamda)
liga2021 = spain_league[spain_league$Season==2021, ]
#X: num de goles --> Pois(lamda)
liga2021 = spain_league[spain_league$Season==2021, ]
lambda_est = mean(liga2021$hgoal)
#0.01 - 0.98 - 0.01
# z = X_gorrito - lambda / sqrt(lambda/n)--------->  X_gorrito - lambda / sqrt(X_gorrito/n)
menos_z = qnorm(0.01)
mas_z = qnorm(0.99)
#X_gorrito - 2.3* sqrt(X_gorrito/n) < lambda
z = c(mas_z, menos_z)
lambda_est + z * sqrt(lambda_est/length(liga2021$hgoal))
library(readr)
juries <- read_csv("data_4/data_4/juries.csv")
View(juries)
library(readr)
ab_testing <- read_csv("data_4/data_4/ab_testing.csv")
View(ab_testing)
ab_testing$has_clicked = as.factor(ab_testing$has_clicked)
hist(ab_testing)
?prop.test
ab_testing_new = ab_testing[ab_testing$page_design== "new", ]
ab_testing_old = ab_testing[ab_testing$page_design== "old", ]
matriz = table(c(ab_testing_new, ab_testing_old))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
ab_testing <- read_csv("data_4/data_4/ab_testing.csv")
ttt=table(ab_testing)
exito_new = ttt[1,2]
exito_old= ttt[2,2]
vec_x = c(exito_new, exito_old)
prop.test(vec_x, rowSums(ttt), alternative = "greater")
print("la propabilidad de conversión en la página nueva es al menos
un 3% superior a la página vieja (95%). Debemos cambiar el diseño")
print("dado que el pvalor es casi cero, acogemos la hipótesis alternativa")
matriz = table(ab_testing)
table(ab_testing)
matriz[1,0]
matriz[1,1]
exito_old = matriz[2,2]
lenght(ab_testing)
length(ab_testing)
nrow(ab_testing)
#3) Crear el prop test
#mu_new > mu_old
prop.test(exitos, nrow(ab_testing), alternative = "greater")
#2) crear vector de éxitos
exito_new = matriz[1,1]
exito_old = matriz[2,2]
exitos = c(exito_new, exito_old)
#3) Crear el prop test
#mu_new > mu_old
prop.test(exitos, nrow(ab_testing), alternative = "greater")
#3) Crear el prop test
#mu_new > mu_old
prop.test(exitos, rowSums(matriz), alternative = "greater")
