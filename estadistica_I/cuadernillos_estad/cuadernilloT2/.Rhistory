knitr::opts_chunk$set(echo = TRUE)
baraja = paste(c('H', 'C', "B", "O"), rep(1:10, each = 4))
baraja
sample(c('H', 'C', "B", "O"), 1)
?setdiff
#1º) Elegir num pareja
num_pareja = sample(1:4, 1)
resto_num = setdiff(1:4, num_pareja)
paste(palo_resto,num)
num_pareja = sample(1:4, 1)
resto_num = setdiff(1:4, num_pareja)
#2º Elegir palo pareja
palo_pareja = sample(c('H', 'C', "B", "O"), 1)
#3º Elegir carta restante
num = sample(resto_num, 1)
palo_resto = sample(c('H', 'C', "B", "O"), 1)
paste(palo_resto,num)
#1º sacamos dos copas
copas = sample("C", 1:10, 2)
#1º sacamos dos copas
copas = sample("C", 1:10, 2)
sample("C", 1:10, 2)
knitr::opts_chunk$set(echo = TRUE)
sample("C" , 1:10, 2)
laPlace = choose(10,2)*choose(10,3)/choose(40,3)
result = 2 * (factorial(3))^2
variaciones(31,4)
sample(0:1, 50, replace = TRUE)
sum(sample(0:1, 50, replace = TRUE))/N
sum(sample(0:1, 50, replace = TRUE))/50
sum(sample(0:1, 50, replace = TRUE))/50
sum(sample(0:1, 50, replace = TRUE))/50
laPlace = choose(50,25)/2^50
choose(50,25)/2^50
choose(50,24)/2^50
sum(sample(0:1, 50, replace = TRUE))/50
knitr::opts_chunk$set(echo = TRUE)
choose(50,25)/2^50
hermanos = rep(1:10, by = 2)
rep(1:10, by = 2)
?rep
rep(1:10, each = 2)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
rep(1:10, each = 2)
sample(hermanos, 8, replace = TRUE)
?sample
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(hermanos, 8)
sample(1:10, 8)
paste (c("A", "B"),rep(1:10, each = 2))
sample(c("A", "B"), 1)
}
#2º Elijo cual de los hermanos va:
hermano = sample(c("A", "B"), 1)
sample(c("A", "B"), 8, replace = TRUE)
paste(fam, hermano)
#2º Elijo cual de los hermanos va:
hermano = sample(c("A", "B"), 8, replace = TRUE)
paste(fam, hermano)
#1º) Se elijen las fams del equipo
fam = sample(1:10, 8)
#2º Elijo cual de los hermanos va:
hermano = sample(c("A", "B"), 8, replace = TRUE)
paste(fam, hermano)
total = (choose(10,8)*2^8)/choose(20,8)
total
rep(0, 15)
sample(c (rep(0, 15), rep(1,10)))
print((factorial(20) / (factorial(11)*factorial(9)))/(factorial(25)/(factorial(15)*factorial(10))))
c(rep("M", 4), rep("P",3), rep("H", 2), "I")
sample(libros)
libros = c(mates, progra, hst, "I")
mates = rep("M", 4)
progra = rep("P",3)
hst = rep("H", 2)
libros = c(mates, progra, hst, "I")
sample(libros)
libros = sample(1:4)
choose(4, 4)
#3º) Ponerlos en la estantería
paste(posicion, c("M", "P", "H", "I"))
#1º) Elegir posición de cada asignatura
posicion = sample(1:4)
#2º) Reordenar propios libros
mates = sample(1:4)
progra = sample(1:3)
hst = sample(1:2)
#3º) Ponerlos en la estantería
paste(posicion, c("M", "P", "H", "I"))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
urna = sample(c(brojas, bnegras))
urna[1:3]
srtsplit?
)
?srtsplit
urna[1] == "3 R" | urna[1] == "3 N"
urna[1]
urna[1] == 2
strsplit(urna , " ")
urna_f[1] == "3"
urna_f =strsplit(urna , " ")
urna_f[1] == "3"
urna_f[1] == 2
urna_f[1] == "2"
color  =saply(strsplit(urna , " "), function(vec) vec[2])
color  =sapply(strsplit(urna , " "), function(vec) vec[2])
color
urna[1]=="N" & urna[2] == "R"
urna[1]=="N" & urna[2] == "N"
num3 = sapply(strsplit(urna, " "), function(vec) vec[1])
color[1]=="N" & color[2] == "R"
color[1]=="N" & color[2] == "N"
num3 = sapply(strsplit(urna, " "), function(vec) vec[1])
num3
num3[1] == "3" & num3[2]=="3"
num3[1] == "2" & num3[2]=="3"
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
urna = sample(c(brojas, bnegras))
color  =sapply(strsplit(urna , " "), function(vec) vec[2])
num3 = sapply(strsplit(urna, " "), function(vec) vec[1])
cond1 = num3[1] == "3" & num3[2]=="3"
cond2 = color[1]=="N" & color[2] == "R"
cond1 || cond2
sims = replicate(N, {
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
urna = sample(c(brojas, bnegras))
color  =sapply(strsplit(urna , " "), function(vec) vec[2])
num3 = sapply(strsplit(urna, " "), function(vec) vec[1])
cond1 = num3[1] == "3" & num3[2]=="3"
cond2 = color[1]=="N" & color[2] == "R"
cond1 || cond2
})
N=100
sims = replicate(N, {
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
urna = sample(c(brojas, bnegras))
color  =sapply(strsplit(urna , " "), function(vec) vec[2])
num3 = sapply(strsplit(urna, " "), function(vec) vec[1])
cond1 = num3[1] == "3" & num3[2]=="3"
cond2 = color[1]=="N" & color[2] == "R"
cond1 || cond2
})
sum(sims)/N
knitr::opts_chunk$set(echo = TRUE)
paste(1:3, "R")
urna = sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
urna = sample(c(paste(1:3, "R"), paste(1:3, "N")))
sample(c(paste(1:3, "R"), paste(1:3, "N")))
num = strsplit("")
?strsplit
num = strsplit(urna, "")
strsplit(urna, "")
num = strsplit(urna, " ")
strsplit(urna, " ")
strsplit(urna, " ")[1, ]
urna_div = strsplit(urna, " ")
urna_div[1, ]
urna_div
urna_div = table(strsplit(urna, " "))
urna_div
urna_div = strsplit(urna, " ")
urna_div[2]
urna_div
urna_div[2]
urna_div[1]
urna_div[1:2]
urna_div[1:2, ]
urna_div = sapply(strsplit(urna, " ") function(vec) vec[2]))
urna_div = sapply(strsplit(urna, " "), function(vec) vec[2]))
urna_div = sapply(strsplit(urna, " "), function(vec) vec[2])
sapply(strsplit(urna, " "), function(vec) vec[2])
urna_div = sapply(strsplit(urna, " "))
urna_div = strsplit(urna, " ")
strsplit(urna, " ")
num = sapply(srtsplit(urna, " "), function(vec) vec[1])
num = sapply(srtsplit(urna, " "), function(vec) vec[1])
col = sapply(strsplit(urna, " "), function(vec) vec[2])
num = sapply(strsplit(urna, " "), function(vec) vec[1])
col = c(3,3,4,4)
col
col[1] == 3 && col[2]==3
TRUE + FALSE
TRUE + TRUE
TRUE | TRUE
TRUE | FALSE
N=1000
sims = replicate(N,{
urna = sample(c(paste(1:3, "R"), paste(1:3, "N")))
strsplit(urna, " ")
col = sapply(strsplit(urna, " "), function(vec) vec[2])
num = sapply(strsplit(urna, " "), function(vec) vec[1])
cond1 = num[1] == 3 && num[2]==3
cond2 = col[1] == "N" && col[1]=="R"
cond1 | cond2
})
sims
sum(sims)/N
mean(sims)
#------------SIMULACIONES ------------
N=10000
sims = replicate(N, {
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
urna = sample(c(brojas, bnegras))
color  =sapply(strsplit(urna , " "), function(vec) vec[2])
num3 = sapply(strsplit(urna, " "), function(vec) vec[1])
cond1 = num3[1] == "3" & num3[2]=="3"
cond2 = color[1]=="N" & color[2] == "R"
cond1 | cond2
})
sum(sims)/N
N=1000
sims = replicate(N,{
urna = sample(c(paste(1:3, "R"), paste(1:3, "N")))
strsplit(urna, " ")
col = sapply(strsplit(urna, " "), function(vec) vec[2])
num = sapply(strsplit(urna, " "), function(vec) vec[1])
cond1 = num[1] == 3 && num[2]==3
cond2 = col[1] == "N" && col[1]=="R"
cond1 | cond2
})
sims
sum(sims)/N
mean(sims)
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
urna = sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
brojas = paste(1:3, "R")
bnegras = paste(1:3, "N")
sample(c(brojas, bnegras))
cumples = sample(1:365, n, replace = TRUE)
cumples
n=30
casos_totales = function(){
sample(1:365, n, replace = TRUE) #--> 365^30 ó 365^n
}
casos_fav = function(){
cumples = sample(1:365, n, replace = TRUE)
cumples
}
cumples = sample(1:365, n, replace = TRUE)
cumples
table(cumples)
table(cumples) == 2
sum(table(cumples) == 2)
sum(table(cumples) > 1)
LaPlace1 = choose(365,n)/365^n
choose(365,n)/365^n
LaPlace1 = variaciones(365,n)/365^n
source("utils(3).R")
source("utils(3).r")
source("utils.R")
LaPlace1 = variaciones(365,n)/365^n
variaciones(365,n)/365^n
sample(1:365, n-1)
LaPlace2 = variaciones(365,n-1)/365^n
variaciones(365,n-1)/365^n
setdiff(1:365, fecha_rep)
fecha_rep =  sample(1:365, 1)
setdiff(1:365, fecha_rep)
cumples = sample(1:365, n, replace = TRUE)
cumples
cumple_rep = sum(table(cumples) > 1)
cumple_rep
cumples
table(cumples)
cumple_rep = sum(table(cumples) > 1)
cumple_rep
cumple_rep > 1
n=1000
sims = replicate(N, {
cumples = sample(1:365, n, replace = TRUE)
cumples
table(cumples)
cumple_rep = sum(table(cumples) > 1)
cumple_rep > 1 })
sims
sim = function(n){
cumples = sample(1:365, n, replace = TRUE)
cumple_rep = sum(table(cumples) > 1)
cumple_rep > 1
}
sim = Vectorize((sim))
sim(1:10)
sim(1:100)
table(sim(1:100))
sims(n)
sim(n)
sim(30)
sim = function(n){
sims = replicate(N, {
cumples = sample(1:365, n, replace = TRUE)
cumple_rep = sum(table(cumples) > 1)
cumple_rep > 1 })
mean(sims)
}
sim = Vectorize((sim))
sim(3)
sim(30)
sim(5)
sim(10)
sim(10:40)
sim(10:40) > 0.5
table(sim(10:40) > 0.5)
tabla = table(sim(10:40) > 0.5)
tabla[1]
source("utils.R")
n=30
casos_totales = function(){
sample(1:365, n, replace = TRUE) #--> 365^30 ó 365^n
}
casos_fav1 = function(){
sample(1:365, n) #--> variaciones(365, n)
#cumples = sample(1:365, n, replace = TRUE) #--> 365^30 ó 365^n
#cumple_rep = sum(table(cumples) > 1)
}
LaPlace1 = variaciones(365,n)/365^n
casos_fav2 = function(){
fecha_rep =  sample(1:365, 1)
sample(resto_fechas, n-1, replace = TRUE) #--> varianciones(3565, n-1)
}
LaPlace2 = 1 - variaciones(365,n)/365^n
n=10
sims = replicate(N, {
cumples = sample(1:365, n, replace = TRUE)
cumples
table(cumples)
cumple_rep = sum(table(cumples) > 1)
cumple_rep > 1 })
sims
sim = function(n){
sims = replicate(N, {
cumples = sample(1:365, n, replace = TRUE)
cumple_rep = sum(table(cumples) > 1)
cumple_rep > 1 })
mean(sims)
}
sim = Vectorize((sim))
sim(10:40) > 0.5
tabla = table(sim(10:40) > 0.5)
n_solucion = tabla[1] + 1
n_solucion
n_solucion = tabla[1, ] + 1
knitr::opts_chunk$set(echo = TRUE)
diaA=sample(1:356, 1)
(diaA+1):365
